name: Update version and build font
on:
  schedule:
    - cron: "0 18 * * *"
  push:

jobs:
  update_version:
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.git-check.outputs.modified }}
      version: ${{ steps.release-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.CUSTOM_TOKEN }}
      - name: Set release version
        id: release-version
        run: |
          VER=$(curl -sL https://api.github.com/repos/be5invis/iosevka/releases/latest | jq -r ".tag_name")
          sed -i "1s/.*/# $VER/" private-build-plans.toml
          echo ::set-output name=version::$VER
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'NBonaparte'
          git config --global user.email 'nbonaparte@users.noreply.github.com'
          git commit -am "New Iosevka version ${{ steps.release-version.outputs.version }}"
          git push
  check_release_exists:
    needs: update_version
    runs-on: ubuntu-latest
    if: needs.update_version.outputs.modified == 'true'
    outputs:
      release_exists: ${{ steps.check.outputs.release_exists }}
    steps:
      - id: check
        run: |
          VER=$(curl -sL https://api.github.com/repos/NBonaparte/iosevka-custom/releases/latest | jq -r ".tag_name")
          echo ::set-output name=release_exists::$([[ $VER != "release-$(date +'%Y-%m-%d')" ]] && echo "false" || echo "true")
  build_font:
    needs: [update_version, check_release_exists]
    runs-on: ubuntu-latest
    # only build if release hasn't been built yet
    if: needs.check_release_exists.outputs.release_exists == 'false'
    env:
      VER: ${{ needs.update_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: sudo apt update
      - run: sudo apt install ttfautohint
      - name: Download Iosevka source
        run: |
          #VER=$(awk 'NR==1{print $2}' private-build-plans.toml)
          curl -Lo "$VER.zip" "https://github.com/be5invis/Iosevka/archive/refs/tags/$VER.zip"
          unzip "$VER.zip"
          cd Iosevka-*
          cp ../private-build-plans.toml .
      - name: Install npm packages
        run: |
          cd Iosevka-*
          npm install
      - name: Build custom Iosevka
        run: |
          cd Iosevka-*
          npm run build -- ttf::iosevka-nb
      - name: Create font zip
        run: |
          cd Iosevka-*
          cd dist/iosevka-nb
          zip -r iosevka-nb.zip *
          mv iosevka-nb.zip ../../..
      - name: Get timestamp
        id: timestamp
        run: echo "::set-output name=ts::$(date +'%Y-%m-%d')"
      - name: Upload font zip with release
        uses: ncipollo/release-action@v1
        with:
          artifacts: iosevka-nb.zip
          tag: release-${{ steps.timestamp.outputs.ts }}
          body: ${{ env.VER }}
          commit: ${{ github.event.head_commit.id }}
          token: ${{ secrets.CUSTOM_TOKEN }}
