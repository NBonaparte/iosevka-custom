name: Build font
on:
  push:
    paths:
      - '**.toml'
    # don't rerun the build if a release already exists
    tags-ignore:
      - 'release-*'

jobs:
  check_release_exists:
    runs-on: ubuntu-latest
    steps:
      - id: check
        run: |
          VER=$(curl -sL https://api.github.com/repos/NBonaparte/iosevka-custom/releases/latest | jq -r ".tag_name")
          [[ $VER != "release-$(date +'%Y-%m-%d')" ]]
  build_font:
    needs: check_release_exists
    runs-on: ubuntu-latest
    # only build if release hasn't been built yet
    if: needs.check_release_exists.result == 'success'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: sudo apt install ttfautohint
      - name: Download Iosevka source
        id: iosevka-src
        run: |
          VER=$(awk 'NR==1{print $2}' private-build-plans.toml)
          curl -Lo "$VER.zip" "https://github.com/be5invis/Iosevka/archive/refs/tags/$VER.zip"
          unzip "$VER.zip"
          cd Iosevka-*
          cp ../private-build-plans.toml .
          echo "::set-output name=version::$VER"
      - name: Install npm packages
        run: |
          cd Iosevka-*
          npm install
      - name: Build custom Iosevka
        run: |
          cd Iosevka-*
          npm run build -- ttf::iosevka-nb
      - name: Create font zip
        run: |
          cd Iosevka-*
          cd dist/iosevka-nb
          zip -r iosevka-nb.zip *
          mv iosevka-nb.zip ../../..
      - name: Get timestamp
        id: timestamp
        run: echo "::set-output name=ts::$(date +'%Y-%m-%d')"
      - name: Upload font zip with release
        uses: ncipollo/release-action@v1
        with:
          artifacts: iosevka-nb.zip
          tag: release-${{ steps.timestamp.outputs.ts }}
          body: ${{ steps.iosevka-src.outputs.version }}
          commit: ${{ github.event.head_commit.id }}
          token: ${{ secrets.CUSTOM_TOKEN }}
