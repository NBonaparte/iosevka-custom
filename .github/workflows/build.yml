name: Update version and build font
on:
  schedule:
    - cron: "0 18 * * *"
  push:
    branches:
      - "**"
    tags-ignore:
      - "release-*"

jobs:
  check_release_exists:
    name: "Check if release exists for latest commit and Iosevka version"
    runs-on: ubuntu-latest
    outputs:
      latest_commit: ${{ steps.commit.outputs.id }}
      release_exists: ${{ steps.check.outputs.release_exists }}
      iosevka-ver: ${{ steps.iosevka-ver.outputs.version }}
      release: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - id: iosevka-ver
        run: |
          VER=$(curl -sL https://api.github.com/repos/be5invis/iosevka/releases/latest | jq -r ".tag_name")
          echo "version=$VER" >> $GITHUB_OUTPUT
      - id: commit-short
        run: echo "id=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - id: commit
        run: echo "id=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - id: release
        run: echo "version=release-${{ steps.iosevka-ver.outputs.version }}-${{ steps.commit-short.outputs.id }}" >> $GITHUB_OUTPUT
      - id: check
        run: |
          VER=$(curl -sL https://api.github.com/repos/NBonaparte/iosevka-custom/releases/latest | jq -r ".tag_name")
          echo "release_exists=$([[ $VER != ${{ steps.release.outputs.version }} ]] && echo 'false' || echo 'true')" >> $GITHUB_OUTPUT
  build_font:
    name: "Build font"
    needs: check_release_exists
    runs-on: ubuntu-latest
    # only build if release hasn't been built yet
    if: needs.check_release_exists.outputs.release_exists == 'false'
    env:
      VER: ${{ needs.check_release_exists.outputs.iosevka-ver }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: sudo apt update
      - run: sudo apt install ttfautohint
      - name: Download Iosevka source
        run: |
          curl -Lo "$VER.zip" "https://github.com/be5invis/Iosevka/archive/refs/tags/$VER.zip"
          unzip "$VER.zip"
          cd Iosevka-${VER/*v/}
          cp ../private-build-plans.toml .
      - name: Install npm packages
        run: |
          cd Iosevka-${VER/*v/}
          npm install
      - name: Build custom Iosevka
        run: |
          cd Iosevka-${VER/*v/}
          npm run build -- ttf::iosevka-nb
      - name: Create font zip (without Nerd Fonts)
        run: zip -rj9 iosevka-nb.zip Iosevka-${VER/*v/}/dist/iosevka-nb/ttf/*
      - name: Create font zip (with Nerd Fonts)
        continue-on-error: true
        run: |
          mkdir patched
          docker run -v $(pwd)/Iosevka-${VER/*v/}/dist/iosevka-nb/ttf:/in -v $(pwd)/patched:/out nerdfonts/patcher -c -l -q --no-progressbars --careful || true
          zip -rj9 iosevka-nb-patched.zip patched/*
      - name: Upload font zip with release
        uses: ncipollo/release-action@v1
        with:
          artifacts: iosevka-nb.zip,iosevka-nb-patched.zip
          tag: ${{ needs.check_release_exists.outputs.release }}
          commit: ${{ needs.check_release_exists.outputs.latest_commit }}
          token: ${{ secrets.CUSTOM_TOKEN }}
